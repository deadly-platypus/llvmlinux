--- linux.orig/arch/mips/vdso/Makefile
+++ linux/arch/mips/vdso/Makefile
@@ -5,6 +5,7 @@
 ccflags-vdso := \
 	$(filter -I%,$(KBUILD_CFLAGS)) \
 	$(filter -E%,$(KBUILD_CFLAGS)) \
+	$(filter -target %,$(KBUILD_CFLAGS)) \
 	$(filter -mmicromips,$(KBUILD_CFLAGS)) \
 	$(filter -march=%,$(KBUILD_CFLAGS))
 cflags-vdso := $(ccflags-vdso) \
@@ -82,7 +83,7 @@
 $(obj-vdso): KBUILD_CFLAGS := $(cflags-vdso) $(native-abi)
 $(obj-vdso): KBUILD_AFLAGS := $(aflags-vdso) $(native-abi)
 
-$(obj)/vdso.lds: KBUILD_CPPFLAGS := $(native-abi)
+$(obj)/vdso.lds: KBUILD_CPPFLAGS := $(ccflags-vdso) $(native-abi)
 
 $(obj)/vdso.so.dbg.raw: $(obj)/vdso.lds $(obj-vdso) FORCE
 	$(call if_changed,vdsold)
--- linux.orig/arch/mips/vdso/vdso.lds.S
+++ linux/arch/mips/vdso/vdso.lds.S
@@ -11,13 +11,24 @@
 #include <asm/sgidefs.h>
 
 #if _MIPS_SIM == _MIPS_SIM_ABI64
-OUTPUT_FORMAT("elf64-tradlittlemips", "elf64-tradbigmips", "elf64-tradlittlemips")
+#define BIG_ENDIAN_FORMAT    "elf64-tradbigmips"
+#define LITTLE_ENDIAN_FORMAT "elf64-tradlittlemips"
 #elif _MIPS_SIM == _MIPS_SIM_NABI32
-OUTPUT_FORMAT("elf32-ntradlittlemips", "elf32-ntradbigmips", "elf32-ntradlittlemips")
+#define BIG_ENDIAN_FORMAT    "elf32-ntradbigmips"
+#define LITTLE_ENDIAN_FORMAT "elf32-ntradlittlemips"
 #else
-OUTPUT_FORMAT("elf32-tradlittlemips", "elf32-tradbigmips", "elf32-tradlittlemips")
+#define BIG_ENDIAN_FORMAT    "elf32-tradbigmips"
+#define LITTLE_ENDIAN_FORMAT "elf32-tradlittlemips"
 #endif
 
+#if __MIPSEB__
+#define DEFAULT_FORMAT BIG_ENDIAN_FORMAT
+#else
+#define DEFAULT_FORMAT LITTLE_ENDIAN_FORMAT
+#endif
+
+OUTPUT_FORMAT(DEFAULT_FORMAT, BIG_ENDIAN_FORMAT, LITTLE_ENDIAN_FORMAT)
+
 OUTPUT_ARCH(mips)
 
 SECTIONS
